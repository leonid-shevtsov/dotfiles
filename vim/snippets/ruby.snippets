snippet class
	class ${1:ClassName}
		${2}
	end

snippet def
	def ${1:method_name}
		${2}
	end

snippet defs
	def self.${1:method_name}
		${2}
	end

snippet defa
	def ${1:abstract_method}
	  raise NotImplementedError
	end
	${2}

snippet do
	do
		${1}
	end

snippet rescue
	begin
		${2}
	rescue ${1}
		raise $!
	end

snippet model
	#
	# Associations
	#
	${1}

	#
	# Attributes
	#


	#
	# Scopes
	#


	#
	# Validation
	#


	#
	# Class methods
	#


	#
	# API
	#

protected
#
# Implementation
#

snippet feature
	require 'acceptance/acceptance_helper'
	feature "${1:Feature name}" do
		background do
			${2}
		end

	end

snippet scenario
	scenario "${1:Scenario}" do
		${2}
	end

snippet namespace
	namespace :${1:db} do
		${2}
	end

snippet task
	task :${1:task} do
		${2}
	end

snippet taske
	task :${1:task} => :environment do
		${2}
	end
